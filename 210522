/*	
210522 ee_p5L-ee_Hg
*/

let libs = ['https://unpkg.com/hydra-synth', 'includes/libs/hydra-synth.js']

// hydra canvas + init
let hc = document.createElement('canvas')
hc.width = window.innerWidth
hc.height = window.innerHeight
document.body.appendChild(hc)
let hydra = new Hydra({detectAudio: false,canvas: hc})

let pg // store hydra texture

// hydraSandbox - start
src(o0)
	.layer(src(s0).scale(1.01))
	.add(osc(1,0.1,1),0.5)
	.modulate(osc(1).rotate(1.57))
	.scale(.996)
	.modulateScale(src(s0).pixelate(5, 10), .5)
	.scrollY(1.003)
	// .rotate( ()=>sin(frameCount*.01)*.01 ) // use p5 vars!
	.modulateScale(osc(15, .1,1), .02)
	.invert([1,0])
	.mult(src(s0).scale(0.98),0.125)
	.saturate(3)
	.posterize(4,2)
	// .mult(solid())
	.out()
// hydraSandbox - stop

function preload() {
	font = loadFont("includes/demos-data/fonts/RobotoMono-Regular.otf")
}

function setup() {
	createCanvas(windowWidth, windowHeight)

	// pass p5 canvas to hydra as s0 source
	s0.init({src: drawingContext.canvas})
	pg = createGraphics(hc.width, hc.height)

	background(0)
	textFont(font)
	textAlign(CENTER, CENTER)
}

function draw() {
	pg.drawingContext.drawImage(hc, 0, 0, pg.width, pg.height) // update texture

	clear()
	fill(0)
	stroke(255)
	strokeWeight(2)
	textSize(width / 3)

	let offset = 100
	text('e_e', width / 2 + sin(frameCount * .03) * offset, height / 2 + cos(frameCount * .03) * offset)
}

function keyPressed(){
	if(key == 'S'){
		pg.save('P5LIVE_hydra.png') // save hydra texture
	}
}
